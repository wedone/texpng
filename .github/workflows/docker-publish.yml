name: Build and Publish texpng Docker Images

on:
  workflow_dispatch:
    inputs:
      push:
        description: "Push images to GHCR (true/false)"
        required: false
        default: "true"

permissions:
  contents: read
  packages: write

concurrency:
  group: docker-publish-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - id: debian
            dockerfile: Dockerfile
            suffix: debian


    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute variables
        id: vars
        shell: bash
        run: |
          echo "short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          echo "owner=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT
          VERSION=$(node -p "require('./package.json').version" 2>/dev/null || true)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "refname=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Build and push ${{ matrix.suffix }} image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event.inputs.push != 'false' }}
          provenance: false
          tags: |
            ghcr.io/${{ steps.vars.outputs.owner }}/texpng:${{ matrix.suffix }}
            ghcr.io/${{ steps.vars.outputs.owner }}/texpng:${{ matrix.suffix }}-${{ steps.vars.outputs.short }}
            ${{ steps.vars.outputs.version && matrix.id == 'debian' && format('ghcr.io/{0}/texpng:v{1}', steps.vars.outputs.owner, steps.vars.outputs.version) || '' }}
            ${{ steps.vars.outputs.version && matrix.id == 'debian' && format('ghcr.io/{0}/texpng:{1}', steps.vars.outputs.owner, steps.vars.outputs.version) || '' }}
            ${{ steps.vars.outputs.version && matrix.id == 'alpine' && format('ghcr.io/{0}/texpng:{1}-alpine', steps.vars.outputs.owner, steps.vars.outputs.version) || '' }}
            ${{ matrix.id == 'debian' && steps.vars.outputs.refname == 'main' && format('ghcr.io/{0}/texpng:latest', steps.vars.outputs.owner) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
